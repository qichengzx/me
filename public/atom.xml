<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[启程]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="https://www.qichengzx.com/"/>
  <updated>2016-01-10T11:22:53.000Z</updated>
  <id>https://www.qichengzx.com/</id>
  
  <author>
    <name><![CDATA[qichengzx]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[crontab实现定时备份数据库]]></title>
    <link href="https://www.qichengzx.com/2016/01/10/backup-database-with-crontab.html"/>
    <id>https://www.qichengzx.com/2016/01/10/backup-database-with-crontab.html</id>
    <published>2016-01-10T10:52:55.000Z</published>
    <updated>2016-01-10T11:22:53.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://s.qichengzx.com/img/201601/crontab.jpg" alt=""></p>
<p>crontab命令之前写过了，在<a href="http://segmentfault.com/a/1190000003953826" target="_blank" rel="external">Linux crontab 访问PHP URL完成定时任务</a>，今天写了一个用来备份数据库的脚本。</p>
<p>主要会用到以下几个命令：</p>
<h4 id="mysqldump">mysqldump</h4><p>参考文章：<a href="http://blog.csdn.net/shellching/article/details/8129687" target="_blank" rel="external">mysqldump导入导出数据库总结 </a></p>
<h4 id="创建-sh文件：">创建.sh文件：</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> ~</span><br><span class="line"><span class="keyword">vi</span> backup.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
<p>backup.sh内主要内容如下：</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hlocalhost -uroot -p'root' --databases database1 | gzip &gt; /var/backups/databases-database1<span class="escape">`d</span>ate +'<span class="var_expand">%Y%</span>m<span class="var_expand">%d_%</span>H<span class="var_expand">%M%</span>S'<span class="escape">`.</span>sql.gz</span><br></pre></td></tr></table></figure>
<p>首先用mysqldump命令</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>连接数据库</span><br><span class="line"><span class="number">2.</span>选择要备份数据库</span><br><span class="line"><span class="number">3.</span>选择存储备份文件的方式，这里使用了gzip了生成一个压缩包</span><br></pre></td></tr></table></figure>
<p>根据文档，如果想备份所有数据库，可以使用</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hlocalhost -uroot -p'root' --all-databases | gzip &gt; /var/backups/databases-all-database<span class="escape">`d</span>ate +'<span class="var_expand">%Y%</span>m<span class="var_expand">%d_%</span>H<span class="var_expand">%M%</span>S'<span class="escape">`.</span>sql.gz</span><br></pre></td></tr></table></figure>
<p>保存。</p>
<p>有备份，就会有备份后的处理，显而易见的问题是备份多了会比较占空间，并且也用不到那么多备份。所以备份完成删除掉一段时间以前的就可以了。这步也可以在备份前做，无所谓。</p>
<p>这里又用到了find命令</p>
<p>参考文章：<a href="http://www.cnblogs.com/wanqieddy/archive/2011/06/09/2076785.html" target="_blank" rel="external">Linux中find常见用法示例</a></p>
<h4 id="删除之前的备份文件">删除之前的备份文件</h4><p>在刚才的backup.sh中继续输入：</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/var/backups/</span></span><br><span class="line">rm -rf `<span class="javascript">find . -name <span class="string">'*.sql.gz'</span> -mtime +<span class="number">10</span></span>`</span><br></pre></td></tr></table></figure>
<p>这句命令有两部分，</p>
<p>第一部分是删除命令：’rm -rf’。就是那句一定要慎用的命令了.</p>
<p>第二部分是找到：当前目录，名字以’.sql.gz’结尾的，更改时间在10天以前的文件。</p>
<p>‘.’表示当前目录，由于上一句是’cd /var/backups/‘，所以这里使用当前目录即可。</p>
<p>‘-name ‘和’-mtime’参数是find命令的条件。</p>
<p>具体的说明，和其他条件可以参考前边说到的文章。</p>
<p>到这里基本上备份脚本就完成了。</p>
<p>但是为了什么时候突然想看一下日志，或者备份出错的时候查问题，还可以在脚本里加上记录日志的命令：</p>
<h4 id="日志">日志</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo '<span class="operator"><span class="keyword">Begin</span> <span class="keyword">Backup</span> <span class="keyword">Database</span> <span class="keyword">At</span> :<span class="string">' `date +'</span>%Y-%<span class="keyword">m</span>-%<span class="keyword">d</span> %H:%<span class="keyword">M</span>:%S<span class="string">'`</span></span></span><br></pre></td></tr></table></figure>
<p>这里又用到了date。</p>
<p>参考文章：<a href="http://blog.csdn.net/jk110333/article/details/8590746/" target="_blank" rel="external">Linux下date命令，格式化输出，时间设置 </a></p>
<p>脚本保存之后，记得添加执行权限；</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">sudo</span> <span class="tag">chmod</span> +<span class="tag">x</span> <span class="tag">backup</span><span class="class">.sh</span></span><br></pre></td></tr></table></figure>
<p>接下来就是在系统里添加crontab任务了。</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /etc/</span><br><span class="line"><span class="keyword">vi</span> crontab</span><br></pre></td></tr></table></figure>
<p>在文件末尾，加上</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">m</span>  <span class="keyword">h</span> dom mon dow user	command</span><br><span class="line">00 5 * * * root /home/yourname/backup.<span class="keyword">sh</span> &gt;&gt; /<span class="keyword">var</span>/<span class="keyword">log</span>/backup.<span class="literal">log</span></span><br></pre></td></tr></table></figure>
<p>这样，backup.sh里的echo就会输出到/var/log/backup.log中了。</p>
<p>Over。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://s.qichengzx.com/img/201601/crontab.jpg" alt=""></p>
<p>crontab命令之前写过了，在<a href="http://segmentfault.com/a/1190000003953]]>
    </summary>
    
      <category term="crontab" scheme="https://www.qichengzx.com/tags/crontab/"/>
    
      <category term="linux" scheme="https://www.qichengzx.com/tags/linux/"/>
    
      <category term="mysql" scheme="https://www.qichengzx.com/tags/mysql/"/>
    
      <category term="linux" scheme="https://www.qichengzx.com/categories/linux/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Dropbox同步hexo文章]]></title>
    <link href="https://www.qichengzx.com/2015/12/27/dropbox-sync-hexo-article.html"/>
    <id>https://www.qichengzx.com/2015/12/27/dropbox-sync-hexo-article.html</id>
    <published>2015-12-27T13:47:09.000Z</published>
    <updated>2016-01-01T14:25:02.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://s.qichengzx.com/img/201512/20130702165945-558672261.jpg" alt=""></p>
<p>继之前<a href="https://www.qichengzx.com/2015/11/13/dropbox-sync-hexo-and-autobuild-itself.html">那次失败的尝试</a>之后（只在当时写的时候实验过几次，每次都以服务器卡死结束），后来在又多了几篇日志之后连generate也不能愉快的完成了。索性就在本地生成然后git push到服务器。</p>
<p>现在想更激进一些，git只管理日志以外的东西，比如hexo的升级，或模板的调整和日志源文件。而生成的静态文件直接通过Dropbox客户端同步到服务器。</p>
<p>话不多说。</p>
<p>以下为前提：</p>
<pre><code>本地已安装hexo，和Dropbox客户端，并且客户端的同步目录已经选择到hexo的目录。
服务器已安装dropbox服务，及相应的用户。
</code></pre><p>Dropbox的同步目录选hexo根目录或public都行，只是在服务器的处理脚本那同步修改下就行了。</p>
<p>以下内容假设已在服务器添加dbox用户用于dropbox服务的同步处理。并且也已经设置了与dropbox账户的关联。</p>
<h4 id="启动dropboxd">启动dropboxd</h4><p>用dbox用户登录服务器。</p>
<p>然后，启动dropboxd进程。</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~<span class="regexp">/dropbox-dist/dropboxd</span> &amp;</span><br></pre></td></tr></table></figure>
<h4 id="设置文件夹监测">设置文件夹监测</h4><h5 id="先安装incron服务。">先安装incron服务。</h5><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get <span class="keyword">install</span> incron</span><br><span class="line">yum <span class="keyword">install</span> incron</span><br></pre></td></tr></table></figure>
<h5 id="开机启动">开机启动</h5><p>安装sysv-rc-conf，用于管理服务的启动</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install sysv-rc-<span class="keyword">conf</span></span><br><span class="line">sysv-rc-<span class="keyword">conf</span> incron <span class="keyword">on</span></span><br><span class="line">sysv-rc-<span class="keyword">conf</span> --<span class="keyword">list</span> <span class="comment">//用于查看所有服务的状态</span></span><br></pre></td></tr></table></figure>
<h5 id="创建监测服务">创建监测服务</h5><p>先修改下incron的编辑器</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vi</span> /etc/incron.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure>
<p>在文件的最后一行，去掉editor = vi前的#，保存退出。</p>
<p>输入：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">incrontab <span class="operator">-e</span></span><br></pre></td></tr></table></figure>
<p>如果当前登录的不是dbox用户，可以使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">incrontab -udbox <span class="operator">-e</span></span><br></pre></td></tr></table></figure></p>
<p>然后输入：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/home/</span>dbox<span class="regexp">/Dropbox/y</span>ourfolder<span class="regexp">/ IN_ATTRIB,IN_MOVE /</span>home<span class="regexp">/dbox/</span>dbox.sh</span><br></pre></td></tr></table></figure>
<p>第一个参数：用来接收Dropbox同步的文件夹</p>
<p>第二个参数：指监测的动作</p>
<p>第三个参数：处理脚本</p>
<p>监测的动作可以用：</p>
<figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">IN_ACCESS，即文件被访问</span><br><span class="line">IN_MODIFY，文件被 <span class="keyword">write</span></span><br><span class="line">IN_ATTRIB，文件属性被修改，如 <span class="keyword">chmod</span>、<span class="keyword">chown</span>、touch 等</span><br><span class="line">IN_CLOSE_WRITE，可写文件被 <span class="keyword">close</span></span><br><span class="line">IN_CLOSE_NOWRITE，不可写文件被 <span class="keyword">close</span></span><br><span class="line">IN_OPEN，文件被 <span class="keyword">open</span></span><br><span class="line">IN_MOVED_FROM，文件被移走,如 mv</span><br><span class="line">IN_MOVED_TO，文件被移来，如 mv、cp</span><br><span class="line">IN_CREATE，创建新文件</span><br><span class="line">IN_DELETE，文件被删除，如 rm</span><br><span class="line">IN_DELETE_SELF，自删除，即一个可执行文件在执行时删除自己</span><br><span class="line">IN_MOVE_SELF，自移动，即一个可执行文件在执行时移动自己</span><br><span class="line">IN_UNMOUNT，宿主文件系统被 umount</span><br><span class="line">IN_CLOSE，文件被关闭，等同于(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)</span><br><span class="line">IN_MOVE，文件被移动，等同于(IN_MOVED_FROM | IN_MOVED_TO)</span><br><span class="line"><span class="comment">#上面所说的文件也包括目录。</span></span><br></pre></td></tr></table></figure>
<h5 id="处理同步后的文件的脚本">处理同步后的文件的脚本</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/home/</span>dbox/</span><br><span class="line">vi dbox.sh</span><br><span class="line"></span><br><span class="line">cd <span class="regexp">/home/</span>dbox<span class="regexp">/Dropbox/</span>yoursite/</span><br><span class="line">cp -R <span class="keyword">public</span><span class="regexp">/ /</span>var<span class="regexp">/www/</span>yoursite/</span><br></pre></td></tr></table></figure>
<p>最后一句要注意看你本地同步了哪些内容，还要注意与网站的目录对应。</p>
<p>还要注意dbox.sh要有执行权限，和yoursite的写入权限。</p>
<p>至此，完成。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://s.qichengzx.com/img/201512/20130702165945-558672261.jpg" alt=""></p>
<p>继之前<a href="https://www.qichengzx.com/2015/11/1]]>
    </summary>
    
      <category term="dropbox" scheme="https://www.qichengzx.com/tags/dropbox/"/>
    
      <category term="hexo" scheme="https://www.qichengzx.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Let's Encrypt制作数字证书]]></title>
    <link href="https://www.qichengzx.com/2015/12/19/secure-your-website-with-lets-encrypt.html"/>
    <id>https://www.qichengzx.com/2015/12/19/secure-your-website-with-lets-encrypt.html</id>
    <published>2015-12-19T08:38:37.000Z</published>
    <updated>2015-12-19T13:31:45.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://s.qichengzx.com/img/201512/https.png" alt=""></p>
<p>Let’s Encrypt是一个新的CA机构，提供非常简单并且免费的TLS／SSL证书服务。</p>
<p>可谓万众期待。</p>
<p>说下我的环境：</p>
<pre><code>Ubuntu <span class="number">14.04</span><span class="number">.3</span>
Nginx <span class="number">1.4</span><span class="number">.6</span>
</code></pre><p>首先你要有个域名，其次要有个服务器。</p>
<h3 id="STEP_0_－_安装Let’s_Encrypt_客户端">STEP 0 － 安装Let’s Encrypt 客户端</h3><h5 id="安装git">安装git</h5><p>先更新下系统</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> -y install git</span><br></pre></td></tr></table></figure>
<h5 id="Clone_Let’s_Encrypt">Clone Let’s Encrypt</h5><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo git <span class="keyword">clone</span> <span class="title">https</span>://github.com/letsencrypt/letsencrypt /opt/letsencrypt</span><br></pre></td></tr></table></figure>
<p>这里把下载的文件放到了/opt/letsencrypt文件夹</p>
<h3 id="STEP_1－生成证书">STEP 1－生成证书</h3><p>首先需要关闭80端口</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx <span class="operator">-s</span> stop</span><br></pre></td></tr></table></figure>
<p>接下来运行Let’s Encrypt</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /<span class="keyword">opt</span>/letsencrypt</span><br><span class="line">./letsencrypt-auto certonly --standalone</span><br></pre></td></tr></table></figure>
<p>注意：需要超级用户权限，所以需要输入密码</p>
<p>之后会出现提示框，需要输入邮箱，用于接收提醒和，如果不幸丢失了Key，找回的时候也需要邮箱。</p>
<p>根据提示进行操作即可，接下来啥同意用户协议。</p>
<p>下一步则是输入你需要生成证书的域名了，如果需要一个证书给多个域名使用，这些域名则要全部输入，（example.com和www.example.com是不同的域名），域名之间用空格，逗号，左斜杠 分隔。</p>
<p>成功后会有如下提示：</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">IMPORTANT NOTES:</span><br><span class="line"></span><br><span class="line"> - <span class="keyword">If</span> you lose your account credentials, you can recover through</span><br><span class="line">   e-mails sent <span class="keyword">to</span> sammy@digitalocean.com</span><br><span class="line"> - Congratulations! Your certificate <span class="keyword">and</span> chain have been saved at</span><br><span class="line">    /etc/letsencrypt/live/example.com/fullchain.pem. Your</span><br><span class="line">   cert will expire <span class="keyword">on</span> <span class="number">2016</span>-<span class="number">03</span>-<span class="number">15</span>. <span class="keyword">To</span> obtain a <span class="keyword">new</span> version <span class="keyword">of</span> the</span><br><span class="line">   certificate <span class="keyword">in</span> the future, simply run Let<span class="attribute">'s</span> Encrypt again.</span><br><span class="line"> - Your account credentials have been saved <span class="keyword">in</span> your Let<span class="attribute">'s</span> Encrypt</span><br><span class="line">   <span class="keyword">configuration</span> directory at /etc/letsencrypt. You should make a</span><br><span class="line">   secure backup <span class="keyword">of</span> this folder now. This <span class="keyword">configuration</span> directory will</span><br><span class="line">   also contain certificates <span class="keyword">and</span> private keys obtained by Let<span class="attribute">'s</span></span><br><span class="line">   Encrypt so making regular backups <span class="keyword">of</span> this folder <span class="keyword">is</span> ideal.</span><br><span class="line"> - <span class="keyword">If</span> like Let<span class="attribute">'s</span> Encrypt, please consider supporting our work by:</span><br><span class="line"></span><br><span class="line">   Donating <span class="keyword">to</span> ISRG / Let<span class="attribute">'s</span> Encrypt:   https://letsencrypt.org/donate</span><br><span class="line">   Donating <span class="keyword">to</span> EFF:                    https://eff.org/donate-le</span><br></pre></td></tr></table></figure>
<p>证书位置：/etc/letsencrypt/live/example.com/fullchain.pem</p>
<p>过期时间：2016-03-15</p>
<p>至于过期时间为什么这么短则是出于安全考虑。不宜使用同一个证书太长时间。</p>
<h5 id="证书文件：">证书文件：</h5><p>上一步成功后，会有如下4个文件生成。</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ls <span class="regexp">/etc/</span>letsencrypt<span class="regexp">/live/y</span>our_domain_name</span><br></pre></td></tr></table></figure>
<pre><code><span class="attribute">cert.pem</span>: <span class="string">证书</span>
<span class="attribute">chain.pem</span>: <span class="string">The Let's Encrypt chain certificate（不知道什么鬼）</span>
<span class="attribute">fullchain.pem</span>: <span class="string">cert.pem and chain.pem combined</span>
<span class="attribute">privkey.pem</span>: <span class="string">证书私钥</span>
</code></pre><h3 id="STEP_2－配置Web服务器(Nginx)">STEP 2－配置Web服务器(Nginx)</h3><p>证书生成完毕，现在可以配置Web服务器了。</p>
<p>编辑配置文件：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-available/</span><span class="keyword">default</span></span><br></pre></td></tr></table></figure>
<p>在server区块中，增加如下代码：</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">listen 443 ssl<span class="comment">;</span></span><br><span class="line">server_name example.com<span class="comment">;</span></span><br><span class="line">ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem<span class="comment">;</span></span><br><span class="line">ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>如果之前是绑定的80端口，直接改为443即可，后边增加 ssl 。</p>
<p>如果想使用最安全的SSL协议，增加如下代码：</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line"><span class="title">ssl_prefer_server_ciphers</span> <span class="built_in">on</span>;</span><br><span class="line"><span class="title">ssl_ciphers</span> AES256+EECDH:AES256+EDH:!aNULL;</span><br></pre></td></tr></table></figure>
<p>最后，在server区块后再增加一段，用于从HTTP跳转到HTTPS。</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">server</span> &#123;</span><br><span class="line">    <span class="title">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="title">server_name</span> example.com;</span><br><span class="line">    <span class="title">rewrite</span><span class="regexp"> ^/(.*)</span> <span class="url">https://example.com/<span class="variable">$1</span></span> <span class="built_in">permanent</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>保存，退出。</p>
<p>重启Nginx服务器。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx <span class="operator">-s</span> reopen</span><br></pre></td></tr></table></figure>
<p>现在已经可以通过HTTPS访问网站了。</p>
<p>原文中还有设置自动生成证书的部分，出于懒的原因此处不再写。</p>
<p>参考资料：<br><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-14-04" target="_blank" rel="external">How To Secure Nginx with Let’s Encrypt on Ubuntu 14.04</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="https://s.qichengzx.com/img/201512/https.png" alt=""></p>
<p>Let’s Encrypt是一个新的CA机构，提供非常简单并且免费的TLS／SSL证书服务。</p>
<p>可谓万众期待。</p>
]]>
    </summary>
    
      <category term="https" scheme="https://www.qichengzx.com/tags/https/"/>
    
      <category term="ssl" scheme="https://www.qichengzx.com/tags/ssl/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP使用Redis作为缓存使用PDO读取MySQL数据]]></title>
    <link href="https://www.qichengzx.com/2015/12/05/php-use-pdo-cache-query-result-with-redis.html"/>
    <id>https://www.qichengzx.com/2015/12/05/php-use-pdo-cache-query-result-with-redis.html</id>
    <published>2015-12-05T14:37:09.000Z</published>
    <updated>2015-12-06T01:31:01.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7b1hhm.com1.z0.glb.clouddn.com/hexo1414772222.jpg" alt=""></p>
<p>图片转自：<a href="http://blog.encodez.com/blog/using-pdofetchall-examples-with-codes-and-output-results" target="_blank" rel="external">Using PDO::fetchAll – Examples with codes and output results</a></p>
<p>一个简单的例子。</p>
<p><strong>实现功能：</strong></p>
<pre><code><span class="number">1.</span>使用PDO读取数据

<span class="number">2.</span>使用Redis缓存结果

<span class="number">3.</span>再次查询时会从Redis查询，减少MySQL查询
</code></pre><p>没有注意代码的逻辑，仅实现思路。</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">//一上来肯定是配置pdo的连接信息。其实这步在这个示例中可以放到第一个<span class="keyword">else</span>中。</span><br><span class="line"><span class="variable">$dsn</span> = <span class="string">'mysql:dbname=node;host=127.0.0.1'</span>;</span><br><span class="line"><span class="variable">$user</span> = <span class="string">'root'</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line">//连接Redis</span><br><span class="line"><span class="variable">$redis</span>= new Redis();</span><br><span class="line"><span class="variable">$redis-</span>&gt;connect(<span class="string">'127.0.0.1'</span>,<span class="number">6379</span>);</span><br><span class="line"></span><br><span class="line">//接收查询参数</span><br><span class="line"><span class="variable">$id</span> = intval($_GET[<span class="string">'id'</span>]);</span><br><span class="line"></span><br><span class="line">//设置在Redis中存储的KEY</span><br><span class="line"><span class="variable">$MY</span>_NODE_KEY<span class="number">_</span> = <span class="string">'TEST_PDO_REDIS_ID_'</span>;</span><br><span class="line"></span><br><span class="line">//拼接KEY和查询ID，读取Redis，</span><br><span class="line"><span class="variable">$cache</span> = <span class="variable">$redis-</span>&gt;get(<span class="variable">$MY</span>_NODE_KEY<span class="number">_</span>.<span class="variable">$id</span>);</span><br><span class="line"></span><br><span class="line">//用来插入log的时间参数</span><br><span class="line"><span class="variable">$date</span> = date(<span class="string">"Y-m-d H:i:s"</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$cache</span>)&#123;</span><br><span class="line">	//Redis缓存存在则直接输出</span><br><span class="line">	print_r(json_decode(<span class="variable">$cache</span>,true));</span><br><span class="line">	//并记录log</span><br><span class="line">	error_log(<span class="variable">$date</span>.<span class="string">"---read from redis \r\n"</span>, <span class="number">3</span>, <span class="string">'./debug.txt'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	//缓存不存在，则连接PDO</span><br><span class="line">	try &#123;</span><br><span class="line">    	<span class="variable">$pdo</span> = new PDO(<span class="variable">$dsn</span>, <span class="variable">$user</span>, <span class="variable">$password</span>);</span><br><span class="line">    	error_log(<span class="variable">$date</span>.<span class="string">"---Connection Succcess \r\n"</span>, <span class="number">3</span>, <span class="string">'./debug.txt'</span>);</span><br><span class="line">		</span><br><span class="line">		//查询</span><br><span class="line">	    <span class="variable">$query</span> = <span class="variable">$pdo</span> -&gt; query(<span class="string">"select * from news where id = '$id'"</span>);</span><br><span class="line">		//设置结果集为数组</span><br><span class="line">	    // [PDOStatement::fetch](http://php.net/manual/zh/pdostatement.fetch.php)</span><br><span class="line">	    <span class="variable">$query-</span>&gt;setFetchMode(PDO::FETCH_ASSOC);</span><br><span class="line">	    </span><br><span class="line">	    <span class="variable">$rs</span> = <span class="variable">$query-</span>&gt;fetch();</span><br><span class="line">	</span><br><span class="line">	    if (is_array(<span class="variable">$rs</span>)) &#123;</span><br><span class="line">	    	//查询完成，以json格式写入Redis中。</span><br><span class="line">			<span class="variable">$redis-</span>&gt;set(<span class="variable">$MY</span>_NODE_KEY<span class="number">_</span>.<span class="variable">$rs</span>[<span class="string">'id'</span>],json_encode(<span class="variable">$rs</span>));</span><br><span class="line">			print_r(<span class="variable">$rs</span>);</span><br><span class="line">			error_log(<span class="variable">$date</span>.<span class="string">"read from mysql \r\n"</span>, <span class="number">3</span>, <span class="string">'./debug.txt'</span>);</span><br><span class="line">	    &#125;</span><br><span class="line">	    </span><br><span class="line">	//PDO连接出错</span><br><span class="line">	&#125; catch (PDOException <span class="variable">$e</span>) &#123;</span><br><span class="line">		//输出错误信息，并记录log中</span><br><span class="line">    	echo <span class="string">'Connection failed: '</span> . <span class="variable">$e-</span>&gt;getMessage();</span><br><span class="line">    	error_log(<span class="variable">$date</span>.<span class="string">"---Connection failed \r\n"</span>, <span class="number">3</span>, <span class="string">'./debug.txt'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>写的很糙，逻辑已经简单到没有逻辑了。</p>
<p>一句话说一下思路就是：<br>    先看有没有缓存<br>    木有就查数据库，写入缓存</p>
<p>参考资料：<br>    <a href="http://php.net/manual/zh/book.pdo.php" target="_blank" rel="external">PHP 数据对象</a><br>    <a href="http://www.cnblogs.com/zemliu/archive/2012/05/08/2490953.html" target="_blank" rel="external">PHP PDO的简单使用(query(),exec(),prepare(),Transaction,行锁)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7b1hhm.com1.z0.glb.clouddn.com/hexo1414772222.jpg" alt=""></p>
<p>图片转自：<a href="http://blog.encodez.com/blog/using-pdofe]]>
    </summary>
    
      <category term="mysql" scheme="https://www.qichengzx.com/tags/mysql/"/>
    
      <category term="pdo" scheme="https://www.qichengzx.com/tags/pdo/"/>
    
      <category term="php" scheme="https://www.qichengzx.com/tags/php/"/>
    
      <category term="redis" scheme="https://www.qichengzx.com/tags/redis/"/>
    
      <category term="php" scheme="https://www.qichengzx.com/categories/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Node.js连接MySQL并读取数据]]></title>
    <link href="https://www.qichengzx.com/2015/12/03/nodejs-mysql.html"/>
    <id>https://www.qichengzx.com/2015/12/03/nodejs-mysql.html</id>
    <published>2015-12-03T13:38:37.000Z</published>
    <updated>2015-12-03T14:24:07.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7b1hhm.com1.z0.glb.clouddn.com/hexo201312030901.jpg" alt=""></p>
<p>文章部分代码与<a href="http://segmentfault.com/a/1190000002995355" target="_blank" rel="external">之前整理的一篇文章</a>一样。</p>
<p>本文主要实现node连接MySQL并读取指定表的数据输出到ejs模板中。</p>
<p>MySQL是一款非常常用的开源数据库，<a href="https://www.npmjs.com/package/mysql" target="_blank" rel="external">npm中也有MySQL的包</a>。</p>
<p>###MySQL测试库的表结构：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`news`</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`news`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span>,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span>,</span><br><span class="line">  <span class="string">`createtime`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span></span><br><span class="line"></span><br><span class="line"><span class="operator"><span class="keyword">LOCK</span> <span class="keyword">TABLES</span> <span class="string">`news`</span> WRITE;</span></span><br><span class="line"><span class="operator"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`news`</span> <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">'news one'</span>,<span class="number">1449064787</span>),(<span class="number">2</span>,<span class="string">'news two'</span>,<span class="number">1449064790</span>),(<span class="number">3</span>,<span class="string">'news three'</span>,<span class="number">1449064900</span>);</span></span><br><span class="line"><span class="operator"><span class="keyword">UNLOCK</span> <span class="keyword">TABLES</span>;</span></span><br></pre></td></tr></table></figure>
<h3 id="安装Node-js_MySQL包">安装Node.js MySQL包</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> mysql</span><br></pre></td></tr></table></figure>
<h3 id="server-js">server.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//server.js</span></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> mysql = <span class="built_in">require</span>(<span class="string">'mysql'</span>);</span><br><span class="line"><span class="keyword">var</span> moment = <span class="built_in">require</span>(<span class="string">'moment'</span>);<span class="comment">//用来格式化UNIX时间戳</span></span><br><span class="line"><span class="keyword">var</span> app = express();</span><br></pre></td></tr></table></figure>
<p>配置MySQL数据库</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> connection = mysql.createConnection(&#123;</span><br><span class="line">	host:<span class="string">'localhost'</span>,</span><br><span class="line">	user:<span class="string">'root'</span>,</span><br><span class="line">	password:<span class="string">'root'</span>,</span><br><span class="line">	database:<span class="string">'node'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>连接数据库，并在成功或失败时输出log</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">connection.connect(function(<span class="keyword">err</span>)&#123;</span><br><span class="line">	<span class="keyword">if</span>(!<span class="keyword">err</span>)&#123;</span><br><span class="line">		console.<span class="literal">log</span>('Database is connected...\<span class="keyword">n</span>\<span class="keyword">n</span>');</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		console.<span class="literal">log</span>('<span class="keyword">Error</span> Connecting Database...\<span class="keyword">n</span>\<span class="keyword">n</span>');</span><br><span class="line">	&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>定义表</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">TABLE</span> = '<span class="keyword">news</span>';</span><br></pre></td></tr></table></figure>
<p>设定模板引擎</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="keyword">set</span>(<span class="string">'view engine'</span>,<span class="string">'ejs'</span>);</span><br></pre></td></tr></table></figure>
<p>这就是很普通的路由，表示接收访问首页的请求</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">	<span class="comment">//定义一组数据</span></span><br><span class="line">	<span class="keyword">var</span> data = [</span><br><span class="line">					&#123; name : <span class="string">'Bloody Mary'</span> , drunkness : <span class="number">3</span> &#125;,</span><br><span class="line">					&#123; name : <span class="string">'Martini'</span> , drunkness : <span class="number">5</span> &#125;,</span><br><span class="line">					&#123; name : <span class="string">'Scotch'</span> , drunkness : <span class="number">10</span> &#125;</span><br><span class="line">				];</span><br><span class="line"></span><br><span class="line">	<span class="comment">//MySQL查询</span></span><br><span class="line">	connection.query(</span><br><span class="line">		<span class="comment">//普通的SQL</span></span><br><span class="line">		<span class="string">'select * from '</span> + TABLE,</span><br><span class="line">		<span class="comment">//查询回调</span></span><br><span class="line">		<span class="function"><span class="keyword">function</span>(<span class="params">err,results,fields</span>)</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(err)&#123;</span><br><span class="line">				<span class="comment">//输出错误</span></span><br><span class="line">				<span class="keyword">throw</span> err;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="keyword">if</span>(results)&#123;</span><br><span class="line">				<span class="built_in">console</span>.log(results);</span><br><span class="line">				<span class="comment">//express render一个页面</span></span><br><span class="line">				res.render(<span class="string">'pages/index'</span>,&#123;</span><br><span class="line">					title:<span class="string">'test'</span>,</span><br><span class="line">					results:results,</span><br><span class="line">					data:data,</span><br><span class="line">					moment:moment</span><br><span class="line">				&#125;);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">8888</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'8888 is the magic port'</span>);</span><br></pre></td></tr></table></figure>
<h3 id="index-ejs">index.ejs</h3><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">include</span> ../partials/head %&gt;</span><br><span class="line"></span><br><span class="line">&lt;body class=<span class="string">"container"</span>&gt;</span><br><span class="line">	&lt;main&gt;</span><br><span class="line">		&lt;<span class="keyword">div</span> class=<span class="string">"jumbotron"</span>&gt;</span><br><span class="line">			&lt;h2&gt;data <span class="keyword">from</span> <span class="keyword">static</span>&lt;/h2&gt;</span><br><span class="line">			&lt;ul&gt;</span><br><span class="line">				&lt;% data.forEach(function(d) &#123; %&gt;</span><br><span class="line">				&lt;li&gt;</span><br><span class="line">					&lt;%= d.name %&gt;</span><br><span class="line">					&lt;span&gt;&lt;%= d.drunkness %&gt;&lt;/span&gt;</span><br><span class="line">				&lt;/li&gt;</span><br><span class="line">			    &lt;% &#125;); %&gt;</span><br><span class="line">			&lt;/ul&gt;</span><br><span class="line">		&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">		&lt;<span class="keyword">div</span> class=<span class="string">"jumbotron"</span>&gt;</span><br><span class="line">			&lt;h2&gt;data <span class="keyword">from</span> mysql&lt;/h2&gt;</span><br><span class="line">			&lt;ul&gt;</span><br><span class="line">				&lt;% results.forEach(function(<span class="literal">result</span>) &#123; %&gt;</span><br><span class="line">				&lt;li&gt;</span><br><span class="line">					&lt;%= <span class="literal">result</span>.id %&gt;</span><br><span class="line">					&lt;span&gt;&lt;%= <span class="literal">result</span>.title %&gt;&lt;/span&gt;</span><br><span class="line">					&lt;span&gt;&lt;%= moment(<span class="literal">result</span>.createtime*<span class="number">1000</span>).format('<span class="type">YYYY</span>-<span class="type">MM</span>-<span class="type">DD</span>, hh:mm:ss') %&gt;&lt;/span&gt;</span><br><span class="line">				&lt;/li&gt;</span><br><span class="line">			    &lt;% &#125;); %&gt;</span><br><span class="line">			&lt;/ul&gt;</span><br><span class="line">		&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">		</span><br><span class="line">	&lt;/main&gt;</span><br><span class="line"></span><br><span class="line">	&lt;footer&gt;</span><br><span class="line">		&lt;% <span class="keyword">include</span> ../partials/footer %&gt;</span><br><span class="line">	&lt;/footer&gt;</span><br><span class="line">	</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>至此，就可以正常输出从数据库里读取出来的数据了。</p>
<p><strong>小插曲</strong></p>
<p>之前在练习的时候，require MySQL 之后npm install 只安装了require的几个包，昨天再写的时候装了一大堆。<br>另外之前在使用moment的时候并没有在render页面的时候传入moment，直接就可以用了，昨天也报错了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7b1hhm.com1.z0.glb.clouddn.com/hexo201312030901.jpg" alt=""></p>
<p>文章部分代码与<a href="http://segmentfault.com/a/1190000002]]>
    </summary>
    
      <category term="mysql" scheme="https://www.qichengzx.com/tags/mysql/"/>
    
      <category term="node" scheme="https://www.qichengzx.com/tags/node/"/>
    
      <category term="javascript" scheme="https://www.qichengzx.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MySQL命令行导出结果集到Excel]]></title>
    <link href="https://www.qichengzx.com/2015/11/21/export-results-of-mysql-to-excel.html"/>
    <id>https://www.qichengzx.com/2015/11/21/export-results-of-mysql-to-excel.html</id>
    <published>2015-11-21T13:24:35.000Z</published>
    <updated>2015-11-21T13:50:00.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7b1hhm.com1.z0.glb.clouddn.com/hexo1631785_mysql.gif" alt=""></p>
<p>某个需求，为了简单单独建表存储，而且没有相关的后台管理方法，无法查看，或导出，但是又突然出现需要导出这个需求。</p>
<p>所以突然想到MySQL是否带了这种直接导出到文件中的方法，查资料后发现果然有。</p>
<p>只需要在命令行中执行如下查询即可。</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> my_table <span class="keyword">INTO</span> <span class="keyword">OUTFILE</span> <span class="string">'file.csv'</span> <span class="keyword">FIELDS</span> <span class="keyword">TERMINATED</span> <span class="keyword">BY</span> <span class="string">','</span>;</span></span><br></pre></td></tr></table></figure>
<p>有几点需要注意：</p>
<pre><code><span class="number">0.</span>文件将在服务器上生成，所以需要需要MySQL进程有生成文件的权限。
<span class="number">1.</span>必须为一个不存在的文件名。
</code></pre><p>其实还有一些功能，或者说是说明，这里并没有写。</p>
<p>官方文档：</p>
<p><a href="http://dev.mysql.com/doc/refman/5.5/en/select-into.html" target="_blank" rel="external">13.2.9.1 SELECT … INTO Syntax</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7b1hhm.com1.z0.glb.clouddn.com/hexo1631785_mysql.gif" alt=""></p>
<p>某个需求，为了简单单独建表存储，而且没有相关的后台管理方法，无法查看，或导出，但是又突然出现需要导出这]]>
    </summary>
    
      <category term="excel" scheme="https://www.qichengzx.com/tags/excel/"/>
    
      <category term="mysql" scheme="https://www.qichengzx.com/tags/mysql/"/>
    
      <category term="mysql" scheme="https://www.qichengzx.com/categories/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS标识符]]></title>
    <link href="https://www.qichengzx.com/2015/11/17/js-names.html"/>
    <id>https://www.qichengzx.com/2015/11/17/js-names.html</id>
    <published>2015-11-17T14:07:21.000Z</published>
    <updated>2015-11-18T14:21:40.000Z</updated>
    <content type="html"><![CDATA[<p>标识符由一个字母开头，其后可以选择性的加上一个或多个字母、数字或下划线。但是，不能使用下面这些保留字：</p>
<figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span></span><br><span class="line">boolean <span class="keyword">break</span> <span class="keyword">byte</span></span><br><span class="line"><span class="keyword">case</span> <span class="keyword">catch</span> <span class="built_in">char</span> <span class="keyword">class</span> <span class="keyword">const</span> <span class="keyword">continue</span></span><br><span class="line">debugger <span class="keyword">default</span> <span class="keyword">delete</span> <span class="keyword">do</span> <span class="built_in">double</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">enum</span> <span class="keyword">export</span> extends</span><br><span class="line"><span class="literal">false</span> <span class="keyword">final</span> <span class="keyword">finally</span> <span class="built_in">float</span> <span class="keyword">for</span> <span class="built_in">function</span></span><br><span class="line"><span class="keyword">goto</span></span><br><span class="line"><span class="keyword">if</span> implements <span class="keyword">import</span> <span class="keyword">in</span> instanceof <span class="keyword">int</span> <span class="keyword">interface</span> </span><br><span class="line"><span class="built_in">long</span></span><br><span class="line">native <span class="keyword">new</span> <span class="literal">null</span></span><br><span class="line"><span class="keyword">package</span> <span class="keyword">private</span> <span class="keyword">protected</span> <span class="keyword">public</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="built_in">short</span> <span class="keyword">static</span> <span class="keyword">super</span> <span class="keyword">switch</span> <span class="keyword">synchronized</span></span><br><span class="line"><span class="keyword">this</span> <span class="keyword">throw</span> throws transient <span class="literal">true</span> <span class="keyword">try</span> <span class="keyword">typeof</span></span><br><span class="line">var <span class="keyword">volatile</span> <span class="keyword">void</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">with</span></span><br></pre></td></tr></table></figure>
<p>这个列表里的大部分并未用在JS语言里，有一些已经逐渐在新标准中出现，但是这个列表也不包括一些本应该保留的字，如undefined,NaN,Infinity。</p>
<p>JS不允许使用保留字来命名变量或参数，也不允许在对象字面量中，或者用 点运算符(.)提取对象属性时，使用保留字作为对象的属性名。</p>
<p>标识符被用于语句，变量，参数，属性名，运算符和标记。</p>
<p>注:实际中，JS也允许 (_),($)开头。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>标识符由一个字母开头，其后可以选择性的加上一个或多个字母、数字或下划线。但是，不能使用下面这些保留字：</p>
<figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line"]]>
    </summary>
    
      <category term="javascript" scheme="https://www.qichengzx.com/tags/javascript/"/>
    
      <category term="标识符" scheme="https://www.qichengzx.com/tags/%E6%A0%87%E8%AF%86%E7%AC%A6/"/>
    
      <category term="javascript" scheme="https://www.qichengzx.com/categories/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[利用Dropbox同步hexo的文章源文件并自动生成文章发布]]></title>
    <link href="https://www.qichengzx.com/2015/11/13/dropbox-sync-hexo-and-autobuild-itself.html"/>
    <id>https://www.qichengzx.com/2015/11/13/dropbox-sync-hexo-and-autobuild-itself.html</id>
    <published>2015-11-13T06:12:35.000Z</published>
    <updated>2015-12-19T07:50:01.000Z</updated>
    <content type="html"><![CDATA[<p><strong> 阅读之前默认为已在服务器安装hexo，也默认服务器可以访问Dropbox </strong></p>
<p><strong> 不建议服务器内存小于512M ，谁卡谁知道 </strong></p>
<h3 id="最初的最初">最初的最初</h3><p>先说下我最终完成的结构：</p>
<pre><code><span class="number">1.</span>本地有一个日志文件夹，用于存放md文件，或HTML文件，作为本地的Dropbox客户端同步的目录
<span class="number">2.</span>服务器home文件夹中init一套hexo程序，用于接收本地的md文件，和generate，minify
</code></pre><p>流程：</p>
<pre><code><span class="number">1.</span>本地撰写，本地客户端自动同步
<span class="number">2.</span>服务器Dropbox设置的同步目录接收本地的内容并cp到专门用于生成的hexo目录里
<span class="number">3.</span>服务器用于生成的hexo生成新日志，cp到web目录中
</code></pre><p>这么做的原因是，如果一共（是整个博客一共）只有一篇文章或几篇文章，那几乎没影响，如果，有几十篇了，据我观察，生成很耗时，可能会导致搜索引擎访问出现404，用户打开一个生成到一半的文件，用户打开一个木有样式的文章。</p>
<h3 id="STEP_0_安装Dropbox">STEP 0 安装Dropbox</h3><p><a href="https://db.tt/mMNtRA6x" target="_blank" rel="external">注册Dropbox</a>。</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( ! has_dropbox_account() )&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"请先注册个账户啊亲"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>由于Dropbox默认安装在~，所以建议新建一个专用于同步的账户，如dbox。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">adduser </span>dbox</span><br><span class="line"><span class="label">passwd</span> dbox</span><br></pre></td></tr></table></figure>
<p><strong> 请记住密码。请记住密码。请记住密码。 </strong></p>
<p>然后，用新建的账户登录进去。</p>
<p>终于可以安装Dropbox了。</p>
<p>这里要区分一下你的系统，</p>
<p><strong> 32位: </strong></p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">cd</span> <span class="regexp">~ &amp;&amp;</span> wget -O - <span class="string">"https://www.dropbox.com/download?plat=lnx.x86"</span> | tar xzf -</span><br></pre></td></tr></table></figure>
<p><strong> 64位: </strong></p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">cd</span> <span class="regexp">~ &amp;&amp;</span> wget -O - <span class="string">"https://www.dropbox.com/download?plat=lnx.x86_64"</span> | tar xzf -</span><br></pre></td></tr></table></figure>
<p>然后就可以运行Dropbox的守护程序了</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~<span class="regexp">/.dropbox-dist/dropboxd</span> &amp;</span><br></pre></td></tr></table></figure>
<p>第一次在新的电脑上启动，会提示：</p>
<pre><code>此电脑尚未与任何 Dropbox 帐户关联...

请访问 https://www.dropbox.com/cli_link_nonce?nonce=95cd317d2<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> 来关联此设备。

此电脑现在已与 Dropbox 关联。欢迎 yourname username
</code></pre><p><strong> 注意在出现“此电脑现在已与 Dropbox 关联。欢迎 your username”前不要ctrl+c 退出这个程序。 </strong></p>
<p>打开授权链接后会出现如下的提示，选择连接即可。</p>
<p><img src="http://7b1hhm.com1.z0.glb.clouddn.com/hexo33B2BAAF-6996-41AA-BFA3-FC177106F62A.png" alt=""></p>
<p>一定要注意，不然你都会奇怪为啥再次启动这个进程的时候还会出现“尚未关联的提示”</p>
<p>验证成功后，会在当前用户的home目录中创建Dropbox目录，即Dropbox同步的目录。</p>
<p>此时，如果你打开了 top，那应该发现此时服务器的内存有点捉急了，原因是Dropbox这个进程占的很多，所以一般情况下killall dropbox 退出就好了，壕请随意。</p>
<h3 id="STEP_1_设置文件夹监测">STEP 1 设置文件夹监测</h3><p><strong>安装incron服务</strong></p>
<p>incron是Linux下一个监测文件变化的服务</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get <span class="keyword">install</span> incron</span><br><span class="line">yum <span class="keyword">install</span> incron</span><br></pre></td></tr></table></figure>
<p><strong> 设置开机启动 </strong></p>
<p>安装sysv-rc-conf，用于管理服务的启动</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="built_in">get</span> install sysv-rc-<span class="keyword">conf</span></span><br><span class="line">sysv-rc-<span class="keyword">conf</span> incron <span class="keyword">on</span></span><br></pre></td></tr></table></figure>
<p><strong> 创建监测任务 </strong></p>
<p>先修改下incron的编辑器</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vi</span> /etc/incron.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure>
<p>（此时可能需要sudo权限，因为是dbox用户）在文件的最后一行，去掉editor = vi前的#，保存退出。</p>
<p>输入：incrontab -e</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/home/</span>dbox<span class="regexp">/Dropbox/y</span>ourfolder<span class="regexp">/ IN_ATTRIB,IN_MOVE /</span>home<span class="regexp">/dbox/</span>hexo.bash</span><br></pre></td></tr></table></figure>
<p>第一个参数：用来接收Dropbox同步的文件夹</p>
<p>第二个参数：指监测的动作</p>
<p>第三个参数：处理脚本</p>
<p>监测的动作可以用：</p>
<pre><code>IN_ACCESS，即文件被访问
IN_MODIFY，文件被 <span class="keyword">write</span>
IN_ATTRIB，文件属性被修改，如 <span class="keyword">chmod</span>、<span class="keyword">chown</span>、touch 等
IN_CLOSE_WRITE，可写文件被 <span class="keyword">close</span>
IN_CLOSE_NOWRITE，不可写文件被 <span class="keyword">close</span>
IN_OPEN，文件被 <span class="keyword">open</span>
IN_MOVED_FROM，文件被移走,如 mv
IN_MOVED_TO，文件被移来，如 mv、cp
IN_CREATE，创建新文件
IN_DELETE，文件被删除，如 rm
IN_DELETE_SELF，自删除，即一个可执行文件在执行时删除自己
IN_MOVE_SELF，自移动，即一个可执行文件在执行时移动自己
IN_UNMOUNT，宿主文件系统被 umount
IN_CLOSE，文件被关闭，等同于(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE)
IN_MOVE，文件被移动，等同于(IN_MOVED_FROM | IN_MOVED_TO)
<span class="comment">#上面所说的文件也包括目录。</span>
</code></pre><p>可以选自己需要的动作</p>
<p>接下来写处理脚本<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">vi</span> <span class="tag">hexo</span><span class="class">.bash</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> -R /home/dbox/Dropbox/yourfolder/* /home/dbox/dropasync/<span class="keyword">source</span>/_posts/;</span><br><span class="line"><span class="keyword">cd</span> /home/dbox/dropasync/ &amp;&amp; hexo gm</span><br><span class="line"><span class="keyword">cd</span> ~ &amp;&amp; ./.dropbox-dist/dropboxd</span><br></pre></td></tr></table></figure>
<p>理论上到这里已经可以了。</p>
<p><del>但是实际上我本人在测试的时候，512内存的服务器会只剩下4M内存，然后再执行任何命令都提示<br><code>-bash: fork: Cannot allocate memory</code>，持续很长时间，一开始以为是同时跑的进程太多导致内存不够，把没用的mongodb，redis都kill之后还是这样，后来干脆在执行这个脚本的时候把Dropbox的后台禁掉，也不行，之后想到了在这段脚本里echo一段数字到log中，执行的时候发现会写入多次，但是还是不清楚为什么会出现这种情况，进程里也是出现了两个或多个hexo，于是干脆就在这段脚本开始时先kill dropbox和hexo，在末尾再kill hexo。实际运行起来，内存还是会降到最低，但是持续时间明显减少到可以接受的程度。</del></p>
<hr>
<h2 id="2015-11-21_14:06:07_附截图">2015-11-21 14:06:07 附截图</h2><p><img src="http://7b1hhm.com1.z0.glb.clouddn.com/hexoF2A913D3-14C5-4FC9-B177-500AC0434036.png" alt=""></p>
<hr>
<p>2015-11-14 22:38:06 测试发现，上述带删除线的方法依然不行。内存依然会榨干很长时间。</p>
<hr>
<p>至于为何出现这个情况，咱不可知。。。总不能完全是因为内存太小吧……</p>
<p>后续应该还会继续改进这个脚本。</p>
<p><strong>另外，在安装这个用于生成日志的hexo程序的时候也出现了npm killed的问题，查了资料发现也是因为内存不足，npm install -d 可以查看安装过程，如果出错可以用来定位到底是什么原因引起错误</strong></p>
<p>一些参考资料：</p>
<p><a href="http://lucifr.com/2013/06/02/hexo-on-cloud-with-dropbox-and-vps/" target="_blank" rel="external">Hexo 服务器端布署及 Dropbox 同步</a></p>
<p><a href="http://www.fanicy.com/2014/06/01/0001.hexowithvpsdropbox/" target="_blank" rel="external">用Hexo+Vps搭建博客并用Dropbox同步自动发布</a></p>
<p><a href="http://linux.die.net/man/5/incrontab" target="_blank" rel="external">incrontab(5) - Linux man page</a></p>
<p><a href="http://wlx.westgis.ac.cn/tag/incrontab/" target="_blank" rel="external">incron：linux下基于文件的事件触发</a></p>
<p><a href="http://askubuntu.com/questions/221293/why-is-chkconfig-no-longer-available-in-ubuntu" target="_blank" rel="external">Why is chkconfig no longer available in Ubuntu?</a></p>
<p><a href="https://www.garron.me/en/linux/use-incron-rsync-dropbox-backup.html" target="_blank" rel="external">Use incron to Trigger Action when File Changes 如果设置incrontab出现问题可以参考这篇</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><strong> 阅读之前默认为已在服务器安装hexo，也默认服务器可以访问Dropbox </strong></p>
<p><strong> 不建议服务器内存小于512M ，谁卡谁知道 </strong></p>
<h3 id="最初的最初">最初的最初</h3><p>先]]>
    </summary>
    
      <category term="dropbox" scheme="https://www.qichengzx.com/tags/dropbox/"/>
    
      <category term="hexo" scheme="https://www.qichengzx.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为hexo加一个时钟小挂件]]></title>
    <link href="https://www.qichengzx.com/2015/11/11/time-widget-for-hexo.html"/>
    <id>https://www.qichengzx.com/2015/11/11/time-widget-for-hexo.html</id>
    <published>2015-11-11T06:16:29.000Z</published>
    <updated>2015-11-11T09:28:05.000Z</updated>
    <content type="html"><![CDATA[<p>之前在 <a href="http://segmentfault.com/a/1190000003055672" target="_blank" rel="external">HTML+CSS3再加一点点JS做的一个小时钟</a> 看到的这个问题，觉得很好把代码存下来了，今天突发奇想把它放到hexo的新博客上。</p>
<h3 id="STEP_0">STEP 0</h3><p>把HTML内容放到新建的模板里，我命名为time.ejs。</p>
<pre><code>    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"widget-wrap"</span>&gt;
    &lt;h3 <span class="type">class</span>=<span class="string">"widget-title"</span>&gt;Time&lt;/h3&gt;
    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"widget time"</span>&gt;
        &lt;style <span class="property">id</span>=<span class="string">"clock-animations"</span>&gt;&lt;/style&gt;
        &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"clock-wrapper"</span>&gt;
            &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"clock-base"</span>&gt;
                    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"clock-indicator"</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                        &lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                    &lt;/<span class="keyword">div</span>&gt;
                    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"clock-hour"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"clock-minute"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"clock-second"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
                    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"clock-center"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
            &lt;/<span class="keyword">div</span>&gt;
        &lt;/<span class="keyword">div</span>&gt;
    &lt;/<span class="keyword">div</span>&gt;
&lt;/<span class="keyword">div</span>&gt;
</code></pre><p>原文中<code>&lt;style id=&quot;clock-animations&quot;&gt;&lt;/style&gt;</code>是放在head区域的，为了减小对全局的影响，我拿到这个挂件中了，实际上并没有影响。</p>
<p>这里要注意挂件的代码结构要尽量与主题自带的结构一致。（仅仅是为了好看，和好整理）</p>
<p>当然了，这个文件要放在<code>layout/_widget</code>下。</p>
<h3 id="STEP_1">STEP 1</h3><p>js脚本</p>
<p>由于脚本内容较少，我就直接放在了script.js中，文件位置再source/js。</p>
<pre><code>var <span class="built_in">now</span> = <span class="keyword">new</span> <span class="built_in">Date</span>();
  var <span class="built_in">second</span> = <span class="built_in">now</span>.getSeconds();
  var <span class="built_in">minute</span> = <span class="built_in">now</span>.getMinutes();
  var <span class="built_in">hour</span> = <span class="built_in">now</span>.getHours();
  <span class="keyword">if</span> (<span class="built_in">hour</span> &gt; <span class="number">12</span>) {
      <span class="built_in">hour</span> = <span class="built_in">hour</span> - <span class="number">12</span>;
  }
  hourDeg   = <span class="built_in">hour</span> * <span class="number">30</span> + <span class="built_in">now</span>.getMinutes() / <span class="number">60</span> * <span class="number">30</span>;
  minuteDeg = <span class="built_in">now</span>.getMinutes() * <span class="number">6</span>;
  secondDeg = <span class="built_in">now</span>.getSeconds() * <span class="number">6</span>;
  stylesDeg = [
      <span class="string">"@keyframes rotate-hour{ from{transform:rotate("</span> + hourDeg + <span class="string">"deg);}to{transform:rotate("</span> + (hourDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>,
      <span class="string">"@keyframes rotate-minute{from{transform:rotate("</span> + minuteDeg + <span class="string">"deg);}to{transform:rotate("</span> + (minuteDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>,
      <span class="string">"@keyframes rotate-second{from{transform:rotate("</span> + secondDeg + <span class="string">"deg);}to{transform:rotate("</span> + (secondDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>,
      <span class="string">"@-moz-keyframes rotate-hour{ from{transform:rotate("</span> + hourDeg + <span class="string">"deg);}to{transform:rotate("</span> + (hourDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>,
      <span class="string">"@-moz-keyframes rotate-minute{from{transform:rotate("</span> + minuteDeg + <span class="string">"deg);}to{transform:rotate("</span> + (minuteDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>,
      <span class="string">"@-moz-keyframes rotate-second{from{transform:rotate("</span> + secondDeg + <span class="string">"deg);}to{transform:rotate("</span> + (secondDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>,
      <span class="string">"@-webkit-keyframes rotate-hour{from{transform:rotate("</span> + hourDeg + <span class="string">"deg);}to{transform:rotate("</span> + (hourDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>,
      <span class="string">"@-webkit-keyframes rotate-minute{from{transform:rotate("</span> + minuteDeg + <span class="string">"deg);}to{transform:rotate("</span> + (minuteDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>,
      <span class="string">"@-webkit-keyframes rotate-second{from{transform:rotate("</span> + secondDeg + <span class="string">"deg);}to{transform:rotate("</span> + (secondDeg + <span class="number">360</span>) + <span class="string">"deg);}}"</span>
  ].<span class="built_in">join</span>(<span class="string">""</span>);
  $(<span class="comment">'#clock-animations').html(stylesDeg);</span>
</code></pre><h3 id="STEP_2">STEP 2</h3><p>CSS样式</p>
<p>新建文件time.styl，路径为<code>/source/css/_partial/time.styl</code></p>
<p>内容略多，主要是给多浏览器写前缀。</p>
<pre><code><span class="class">.clock-wrapper</span> <span class="rules">{
    <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">250px</span></span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">250px</span></span></span>;
    <span class="rule"><span class="attribute">background-image</span>:<span class="value"> <span class="function">linear-gradient</span>(<span class="hexcolor">#f7f7f7</span>,<span class="hexcolor">#e0e0e0</span>)</span></span>;
    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;
    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">10px</span> <span class="number">15px</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">15</span>),<span class="number">0</span> <span class="number">2px</span> <span class="number">2px</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">2</span>)</span></span>;
}</span>
<span class="class">.clock-base</span> <span class="rules">{
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">250px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">250px</span></span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#eee</span></span></span>;
    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;
    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="hexcolor">#eee</span></span></span>;
}</span>
<span class="class">.clock-indicator</span> <span class="rules">{
    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">1</span></span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">15px</span></span></span>;
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">15px</span></span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">230px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">230px</span></span></span>;
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span> <span class="rules">{
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">2px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">4px</span></span></span>;
    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">113px</span> <span class="number">114px</span></span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#a4a4a4</span></span></span>;
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(1)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">30deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">30deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">30deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">30deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">30deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;  <span class="comment">/* Opera */</span>        }</span>
    <span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(2)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">60deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">60deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">60deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">60deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">60deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;  <span class="comment">/* Opera */</span>
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(3)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">90deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;  <span class="comment">/* Opera */</span>
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#5a5a5a</span></span></span>;
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(4)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">120deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">120deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">120deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">120deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">120deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(5)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">150deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">150deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">150deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">150deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">150deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(6)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">180deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#5a5a5a</span></span></span>;
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(7)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">210deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">210deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">210deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">210deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">210deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(8)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">240deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">240deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">240deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">240deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">240deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(9)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">270deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">270deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">270deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">270deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">270deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#5a5a5a</span></span></span>;
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(10)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">300deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">300deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">300deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">300deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">300deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(11)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">330deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">330deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">330deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">330deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">330deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
}</span>
<span class="class">.clock-indicator</span> <span class="tag">div</span><span class="pseudo">:nth-child(12)</span> <span class="rules">{
    <span class="rule"><span class="attribute">transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">360deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;
    <span class="rule"><span class="attribute">-ms-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">360deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;    <span class="comment">/* IE 9 */</span>
    <span class="rule"><span class="attribute">-moz-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">360deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;   <span class="comment">/* Firefox */</span>
    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">360deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transform</span>:<span class="value"><span class="function">rotate</span>(<span class="number">360deg</span>) <span class="function">translateY</span>(-<span class="number">113px</span>)</span></span>;     <span class="comment">/* Opera */</span>
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#5a5a5a</span></span></span>;
}</span>
<span class="class">.clock-hour</span> <span class="rules">{
    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">2</span></span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">128px</span></span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">80px</span></span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">4px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">65px</span></span></span>;
    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">2px</span></span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#555</span></span></span>;
    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>)</span></span>; 
    <span class="rule"><span class="attribute">transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">50px</span></span></span>;
    <span class="rule"><span class="attribute">-moz-transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">50px</span></span></span>;
    <span class="rule"><span class="attribute">-ms-transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">50px</span></span></span>;
    <span class="rule"><span class="attribute">-o-transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">50px</span></span></span>;
    <span class="rule"><span class="attribute">-webkit-transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">50px</span></span></span>;
    <span class="rule"><span class="attribute">transition</span>:<span class="value"> <span class="number">1s</span></span></span>;
    <span class="rule"><span class="attribute">-moz-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Firefox 4 */</span>
    <span class="rule"><span class="attribute">-webkit-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Opera */</span>
    <span class="rule"><span class="attribute">animation</span>:<span class="value">rotate-hour <span class="number">43200s</span> linear infinite</span></span>;
    <span class="rule"><span class="attribute">-webkit-animation</span>:<span class="value"> rotate-hour <span class="number">43200s</span> linear infinite</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
}</span>
<span class="class">.clock-minute</span> <span class="rules">{
    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">3</span></span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">128px</span></span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">60px</span></span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">4px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">85px</span></span></span>;
    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">2px</span></span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#555</span></span></span>;
    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>)</span></span>; 
    <span class="rule"><span class="attribute">transition</span>:<span class="value"> <span class="number">1s</span></span></span>;
    <span class="rule"><span class="attribute">-moz-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Firefox 4 */</span>
    <span class="rule"><span class="attribute">-webkit-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Opera */</span>
    <span class="rule"><span class="attribute">transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">70px</span></span></span>;
    <span class="rule"><span class="attribute">-moz-transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">70px</span></span></span>;
    <span class="rule"><span class="attribute">-ms-transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">70px</span></span></span>;
    <span class="rule"><span class="attribute">-o-transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">70px</span></span></span>;
    <span class="rule"><span class="attribute">-webkit-transform-origin</span>:<span class="value"> <span class="number">2px</span> <span class="number">70px</span></span></span>;
    <span class="rule"><span class="attribute">animation</span>:<span class="value">rotate-minute <span class="number">3600s</span> linear infinite</span></span>;
    <span class="rule"><span class="attribute">-webkit-animation</span>:<span class="value"> rotate-minute <span class="number">3600s</span> linear infinite</span></span>; <span class="comment">/* Safari 和 Chrome */</span>
}</span>
<span class="class">.clock-second</span> <span class="rules">{
    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">4</span></span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">129px</span></span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">15px</span></span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">2px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">140px</span></span></span>;
    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">2px</span></span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#a00</span></span></span>;
    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>)</span></span>; 
    <span class="rule"><span class="attribute">transform-origin</span>:<span class="value"> <span class="number">1px</span> <span class="number">115px</span></span></span>;
    <span class="rule"><span class="attribute">-moz-transform-origin</span>:<span class="value"> <span class="number">1px</span> <span class="number">115px</span></span></span>;
    <span class="rule"><span class="attribute">-ms-transform-origin</span>:<span class="value"> <span class="number">1px</span> <span class="number">115px</span></span></span>;
    <span class="rule"><span class="attribute">-o-transform-origin</span>:<span class="value"> <span class="number">1px</span> <span class="number">115px</span></span></span>;
    <span class="rule"><span class="attribute">-webkit-transform-origin</span>:<span class="value"> <span class="number">1px</span> <span class="number">115px</span></span></span>;
    <span class="rule"><span class="attribute">transition</span>:<span class="value"> <span class="number">1s</span></span></span>;
    <span class="rule"><span class="attribute">-moz-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Firefox 4 */</span>
    <span class="rule"><span class="attribute">-webkit-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Safari 和 Chrome */</span>
    <span class="rule"><span class="attribute">-o-transition</span>:<span class="value"> <span class="number">1s</span></span></span>; <span class="comment">/* Opera */</span>
    <span class="rule"><span class="attribute">animation</span>:<span class="value">rotate-hour <span class="number">60s</span> linear infinite</span></span>;
     <span class="rule"><span class="attribute">-webkit-animation</span>:<span class="value"> rotate-second <span class="number">60s</span> linear infinite</span></span>;  <span class="comment">/* Safari 和 Chrome */</span>
}</span>
<span class="class">.clock-second</span><span class="pseudo">:after</span> <span class="rules">{
    <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">""</span></span></span>;
    <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">8px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">8px</span></span></span>;
    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;
    <span class="rule"><span class="attribute">left</span>:<span class="value"> -<span class="number">3px</span></span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">110px</span></span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#a00</span></span></span>;
    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>)</span></span>;
}</span>
<span class="class">.clock-center</span> <span class="rules">{
    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">1</span></span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">55px</span></span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">55px</span></span></span>;
    <span class="rule"><span class="attribute">background-image</span>:<span class="value"> <span class="function">linear-gradient</span>(<span class="hexcolor">#e3e3e3</span>,<span class="hexcolor">#f7f7f7</span>)</span></span>; 
    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">150px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">150px</span></span></span>;
    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="hexcolor">#fafafa</span>, inset <span class="number">0</span> <span class="number">1px</span> <span class="number">0</span> <span class="hexcolor">#e3e3e3</span></span></span>;
}</span>
<span class="class">.clock-center</span><span class="pseudo">:after</span><span class="rules">{
    <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">""</span></span></span>;
    <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">20px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">20px</span></span></span>;
    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">65px</span></span></span>;
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#ddd</span></span></span>;
    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;
}</span>
</code></pre><p> 之后，在sidebar.styl 末尾加入 <code>@import &quot;time&quot;</code>,这是styl的语法，表示引入一个文件，因为两个文件是同级，所以可以直接这么写，加<code>./</code>也可以。</p>
<h3 id="STEP_3">STEP 3</h3><p>最后，在themes的config文件中注册这个挂件。</p>
<p>在_config.yml中，找到<code>widgets</code>，在你想要加的位置中加入 <code>- time</code>，即模板文件名。<br>比如我的widgets变成了这样：</p>
<pre><code>widgets:
-<span class="ruby"> clock
</span>-<span class="ruby"> category
</span>-<span class="ruby"> tag
</span>-<span class="ruby"> tagcloud
</span>-<span class="ruby"> archive
</span>-<span class="ruby"> recent_posts</span>
</code></pre><h3 id="LAST">LAST</h3><p>至此，就全部完事，可以去<code>hexo generate</code>或<code>hexo server</code>了。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前在 <a href="http://segmentfault.com/a/1190000003055672" target="_blank" rel="external">HTML+CSS3再加一点点JS做的一个小时钟</a> 看到的这个问题，觉得很好把代码存下来了，今]]>
    </summary>
    
      <category term="hexo" scheme="https://www.qichengzx.com/tags/hexo/"/>
    
      <category term="time" scheme="https://www.qichengzx.com/tags/time/"/>
    
      <category term="widget" scheme="https://www.qichengzx.com/tags/widget/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[vps 搭建个人git服务器]]></title>
    <link href="https://www.qichengzx.com/2015/11/07/Set%20Up%20a%20Private%20Git%20Server%20on%20a%20VPS.html"/>
    <id>https://www.qichengzx.com/2015/11/07/Set Up a Private Git Server on a VPS.html</id>
    <published>2015-11-07T15:34:10.000Z</published>
    <updated>2015-11-08T02:42:16.000Z</updated>
    <content type="html"><![CDATA[<p>以下内容主要来自<br>    <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-git-server-on-a-vps" target="_blank" rel="external">How To Set Up a Private Git Server on a VPS</a></p>
<p>之前在DigitalOcean买了个5刀的vps，本来是想搞VPN的，但是没成功，后来把个人博客放这了，后来又觉得有点浪费，索性重新启用这个域名来写技术文章。</p>
<p>本来是用的WP的但是也一直没写，后来又想折腾别的程序试一下，就选了现在的<a href="https://hexo.io" target="_blank" rel="external">hexo</a>，昨天在自己电脑上安装了，也可以写文章页可以默认 <code>hexo server</code> 运行，然后，我愉快的把命令行关掉之后，就傻了。</p>
<p>后来也在官方文档和Google里看有什么办法能让它在后台运行，官方说可以 <code>hexo s &amp;</code>，然并卵，官方和Google都说可以用 <code>forever</code> <code>pm2</code> ，一样然并卵，今天早晨起来继续弄的时候，觉得还是放弃吧，既然有public文件夹，还是用nginx去解析吧。这个都是后话了。</p>
<p>下边说怎么在vps上安装git服务器，昨天和今天上午也看了一些资料一直也不成功。晚上从DigitalOcean社区里看到这篇文章，然后就成功了。</p>
<h4 id="0_在本地生成ssh_key">0 在本地生成ssh key</h4><pre><code>ssh-keygen -C <span class="string">"youremail@mailprovider.com"</span>

Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa <span class="keyword">key</span> pair.

Enter file <span class="keyword">in</span> which <span class="keyword">to</span> save the <span class="keyword">key</span> (/home/flynn/.ssh/id_rsa):

Enter passphrase (empty <span class="keyword">for</span> no passphrase):

Enter same passphrase again: 

Your identification has been saved <span class="keyword">in</span> foo_rsa.

Your <span class="keyword">public</span> <span class="keyword">key</span> has been saved <span class="keyword">in</span> foo_rsa.pub.
</code></pre><p>注意替换成自己的邮箱，可以一路回车，也可以在 Enter passphrase 的时候输入一个密码保护一下。如果已经生成过了可以 <strong>略过这步</strong>。</p>
<h4 id="1_在服务器添加git用户">1 在服务器添加git用户</h4><p>首先切换到root用户，<code>su -</code> 。<br>然后添加git用户。（用户名不一定是git，但是习惯上用这个名）</p>
<p><code>useradd git</code></p>
<p>设置密码</p>
<p><code>passwd git</code></p>
<p>输入两次密码即可，用户创建完毕。我在操作的时候并没有在/home/下创建git用户的目录。</p>
<p>所以可能需要自己手动创建</p>
<p><code>cd /home/</code></p>
<p><code>mkdir git</code></p>
<p><code>sudo chown -R -v git:git git/</code></p>
<p>现在可以安装git服务了。</p>
<pre><code><span class="attribute">CentOS/Fedora</span>: <span class="string">yum install git</span>
<span class="attribute">Ubuntu/Debian</span>: <span class="string">apt-get install git</span>
</code></pre><p>DO文档说可以这样，但是部分资料里写要 install git-core，但是因为之前安装过git-core，所以不确定是不是DO文档上是正确的，<strong>所以此处DO的文档可能不准确。</strong>（不确定）</p>
<h4 id="2_把本地的ssh_key添加到服务器的允许访问列表里">2 把本地的ssh key添加到服务器的允许访问列表里</h4><p>登录进服务器，切换到git用户。</p>
<p><code>su git</code></p>
<p>然后创建git用户的.ssh文件夹及authorized_keys文件，</p>
<p><code>mkdir ~/.ssh &amp;&amp; touch ~/.ssh/authorized_keys</code></p>
<p>&amp;&amp;的意思是执行完第一个命令后紧接着执行第二个命令，分开写一样可以，连着写逼格更高。</p>
<p>然后回到本地的命令行里，</p>
<p><code>cat .ssh/id_rsa.pub | ssh git@123.45.56.78 &quot;cat &gt;&gt; ~/.ssh/authorized_keys&quot;</code></p>
<p>第一个cat 后的文件地址取决于你电脑上这个文件的路径，后边是说把前边你本地的id_rsa.pub的内容写到远程服务器上git 这个用户的.ssh/authorized_keys文件里，也就是前边创建的那个文件。</p>
<p>所以，不出意外的话，此时可以在服务器上运行</p>
<p><code>cat ~/.ssh/authorized_keys</code> 就可以看到你本地电脑生成的key了，不出意外的话结尾应该是你生成key填写的邮箱。</p>
<h4 id="3_初始化本地仓库">3 初始化本地仓库</h4><p>在服务器上任何一个位置，执行</p>
<p><code>git init --bare project.git</code>，这样，在你的开发机和服务器环境是就可以用到这个project.git了。</p>
<p>（为已存在的git项目）设置远程仓库的URL</p>
<p><code>git remote set-url origin git@git.droplet.com:project.git</code></p>
<p>git@git.droplet.com:project.git 替换成你的git用户名，你的ip或域名，及你的服务器上git的文件夹</p>
<p>如果是一个新的仓库，是这样</p>
<p><code>git init &amp;&amp; git remote add origin git@git.droplet.com:project.git</code></p>
<p>git@git.droplet.com:my-project.gi 只是服务器上</p>
<h3 id="总结：">总结：</h3><pre><code>所以实际上上边的流程是

<span class="number">0</span>. 在服务器上比如home/git 目录里git init --bare project<span class="class">.git</span>
<span class="number">1</span>. 在自己电脑，某个目录，git init 或者git clone git@git<span class="class">.droplet</span><span class="class">.com</span>:project<span class="class">.git</span>
<span class="number">2</span>. 在服务器上比如www目录，git init 或git clone git@git<span class="class">.droplet</span><span class="class">.com</span>:project<span class="class">.git</span>

不出意外，这样就可以了。

本地添加一个新文件，git add . , git commit -m <span class="string">"test"</span> ,git push origin master，登录服务器，切换到www目录，git pull origin master，就可以了。
</code></pre><p>参考资料:</p>
<p><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-git-server-on-a-vps" target="_blank" rel="external">How To Set Up a Private Git Server on a VPS</a></p>
<p><a href="https://git-scm.com/book/it/v2/Git-on-the-Server-Setting-Up-the-Server" target="_blank" rel="external">Git on the Server - Setting Up the Server</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>以下内容主要来自<br>    <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-git-server-on-a-vps" target="_blank" re]]>
    </summary>
    
      <category term="git" scheme="https://www.qichengzx.com/tags/git/"/>
    
      <category term="vps" scheme="https://www.qichengzx.com/tags/vps/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[React-Native Fetch方法发送网络请求]]></title>
    <link href="https://www.qichengzx.com/2015/11/06/React-Native-Fetch.html"/>
    <id>https://www.qichengzx.com/2015/11/06/React-Native-Fetch.html</id>
    <published>2015-11-06T14:54:22.000Z</published>
    <updated>2015-11-08T02:51:53.000Z</updated>
    <content type="html"><![CDATA[<p>先贴一个官方文档。<br><a href="https://facebook.github.io/react-native/docs/network.html#content" target="_blank" rel="external">Network</a></p>
<pre><code>fetch<span class="list">(<span class="quoted">'https</span><span class="keyword">://mywebsite</span>.com/endpoint/', {
    method: <span class="quoted">'POST</span>',
    headers: {
        <span class="quoted">'Accept</span>': <span class="quoted">'application/json</span>',
        <span class="quoted">'Content-Type</span>': <span class="quoted">'application/json</span>',
    },
    body: JSON.stringify<span class="list">({
        firstParam: <span class="quoted">'yourValue</span>',
        secondParam: <span class="quoted">'yourOtherValue</span>',
    })</span>
})</span>
</code></pre><p>一开始我就是单纯的这么写的，愉快的把URL替换掉，把参数替换掉，然后。。。<br>我愉快的敲下 <code>var_dump($_POST[&#39;firstParam&#39;])</code> 的时候，后台没接到任何东西，后来在stackoverflow上看到回答，说之所以接收不到，是因为这不属于form data，想要这么写，需要在接收前添加 <code>file_get_contents(&#39;php://input&#39;)</code>,然后果然就可以了。</p>
<pre><code><span class="variable">$json</span> = json_decode(file_get_contents(<span class="string">'php://input'</span>), <span class="literal">true</span>);
var_dump(<span class="variable">$json</span>[<span class="string">'firstParam'</span>]);
</code></pre><p>但是这样会影响到现有的web应用，所以又继续查资料，发现可以改成下边这样的方法。</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">toQueryString</span>(<span class="params">obj</span>) </span>{
    <span class="keyword">return</span> obj ? <span class="built_in">Object</span>.keys(obj).sort().map(<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>{
        <span class="keyword">var</span> val = obj[key];
        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(val)) {
            <span class="keyword">return</span> val.sort().map(<span class="function"><span class="keyword">function</span> (<span class="params">val2</span>) </span>{
                <span class="keyword">return</span> <span class="built_in">encodeURIComponent</span>(key) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(val2);
            }).join(<span class="string">'&amp;'</span>);
        }

        <span class="keyword">return</span> <span class="built_in">encodeURIComponent</span>(key) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(val);
    }).join(<span class="string">'&amp;'</span>) : <span class="string">''</span>;
}


fetch(url, {
    method: <span class="string">'post'</span>,
    body: toQueryString({ 
        <span class="string">'firstParam'</span>: <span class="string">'yourValue'</span>,
        <span class="string">'secondParam'</span>:<span class="string">'yourOtherValue'</span> 
    })
}) 
</code></pre><p>这样，在后台就可以正常的用$_POST[‘firstParam’];接收了。</p>
<p><a href="http://stackoverflow.com/questions/32448862/how-can-i-use-react-native-with-php-with-fetch-return-data-is-always-null" target="_blank" rel="external">Sending data as key-value pair using fetch polyfill in react-native</a></p>
<p><a href="http://stackoverflow.com/questions/31201940/sending-data-as-key-value-pair-using-fetch-polyfill-in-react-native" target="_blank" rel="external">How can I use react-native with php with fetch return data is always null</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>先贴一个官方文档。<br><a href="https://facebook.github.io/react-native/docs/network.html#content" target="_blank" rel="external">Network</a></p>
<]]>
    </summary>
    
      <category term="fetch" scheme="https://www.qichengzx.com/tags/fetch/"/>
    
      <category term="react-native" scheme="https://www.qichengzx.com/tags/react-native/"/>
    
      <category term="网络请求" scheme="https://www.qichengzx.com/tags/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="https://www.qichengzx.com/2015/11/06/hello-world.html"/>
    <id>https://www.qichengzx.com/2015/11/06/hello-world.html</id>
    <published>2015-11-06T13:54:22.000Z</published>
    <updated>2015-11-08T02:35:08.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>
